<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="3600000" debug="false">
    <property name="LOG_HOME" value="logs" />

    <!--控制台日志-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度, %msg：日志消息，%n是换行符-->
            <!--如果要输出“%”，则必须用“\”对“\%”进行转义。 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--文件日志-->
    <appender name="CURRENT_FILE" class="ch.qos.logback.core.FileAppender">
        <!--文件名-->
        <file>${LOG_HOME}/current.log</file>
        <!--是否追加-->
        <append>false</append>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="ERROR_FILE" class="ch.qos.logback.core.FileAppender">
        <file>${LOG_HOME}/error.log</file>
        <append>false</append>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--等级过滤，配置匹配和不匹配时的策略-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--过滤等级-->
            <level>ERROR</level>
            <!--如果匹配，就接收-->
            <onMatch>ACCEPT</onMatch>
            <!--如果不匹配就丢弃-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--滚动文件日志-->
    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/log.log</file>
        <!--基于大小和时间的滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/log.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--单个文件最大大小-->
            <maxFileSize>10MB</maxFileSize>
            <!--最大文件数量-->
            <maxHistory>60</maxHistory>
            <!--所有文件最大大小-->
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--临界过滤，大于或者等级临界等级的就接收，否则就丢弃-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--临界等级-->
            <level>INFO</level>
        </filter>
    </appender>

    <!--异步日志-->
    <appender name="ASYNC_ROLLING_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!--异步队列大小，影响性能-->
        <queueSize>256</queueSize>
        <!--空闲临界值(百分比)，小于或等级此值时，会丢弃TRACE、DEBUG、INFO等级的日志-->
        <!--如果要设置不丢弃任何日志，应该设置为0-->
        <discardingThreshold>20</discardingThreshold>
        <!--附加的appender，只能添加一个-->
        <appender-ref ref="ROLLING_FILE" />
    </appender>

    <!--logger，表示某一个包或者一个类的具体日志打印级别、以及指定appender。additivity 表是否向上级logger传递-->
    <logger name="sample.HelloLogback" level="WARN" additivity="true" />
    <logger name="sample.Hello" level="WARN" additivity="false" />

    <!--root节点，是所有logger的根节点，是最上级的节点-->
    <root level="DEBUG">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="CURRENT_FILE" />
        <appender-ref ref="ERROR_FILE" />
        <appender-ref ref="ASYNC_ROLLING_FILE" />
    </root>
</configuration>